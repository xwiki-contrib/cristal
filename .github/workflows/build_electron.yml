name: Electron Build for all platforms

on:
  push:
    branches:
      - '**'
    tags:
      - '**'

## Don't build concurrently for a given branch.
## Only the most recent version is built.
concurrency:
  group: ${{ github.ref }}

permissions: write-all

jobs:
  electron-prepare:
    runs-on: ubuntu-latest
    # Cleanup the release note artifacts before building new ones. Otherwise, the action-gh-release step fails because
    # an artifact already exists.
    steps:
      - uses: liudonghua123/delete-release-action@v1
        with:
          release_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  electron-linux:
    runs-on: ubuntu-latest
    needs: electron-prepare
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5.0.0
        with:
          cache: 'pnpm'
      - id: restore-cache-electron-linux
        uses: actions/cache@v4
        with:
          path: |
            .nx/
          key: ${{ github.ref }}-restore-cache-electron-linux
      - run: pnpm install
      - run: pnpm run build
      - run: sudo apt update
      - run: sudo apt install flatpak-builder
      - run: flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
      - run: pnpm run --filter @xwiki/cristal-electron build:linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: softprops/action-gh-release@v2
        with:
          files: |
            electron/dist/cristal-*.*
            electron/dist/latest.yml
            electron/dist/latest-linux.yml
          tag_name: ${{ github.ref }}
          draft: true
  electron-mac:
    runs-on: macos-latest
    needs: electron-prepare
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5.0.0
        with:
          cache: 'pnpm'
      - id: restore-cache-electron-mac
        uses: actions/cache@v4
        with:
          path: |
            .nx/
          key: ${{ github.ref }}-restore-cache-electron-mac
      - run: pnpm install
      - run: pnpm run build
      - run: pnpm run --filter @xwiki/cristal-electron build:mac
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: softprops/action-gh-release@v2
        with:
          files: electron/dist/cristal-*.dmg
          tag_name: ${{ github.ref }}
          draft: true
  electron-win:
    runs-on: windows-latest
    needs: electron-prepare
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5.0.0
        with:
          cache: 'pnpm'
      - id: restore-cache-electron-win
        uses: actions/cache@v4
        with:
          path: |
            .nx/
            !.nx/workspace-data/d
          key: ${{ github.ref }}-restore-cache-electron-win
        env:
          NX_DISABLE_DB: true
          NX_DB_CACHE: false
      - run: pnpm install
      - run: pnpm run build
      - run: pnpm run --filter @xwiki/cristal-electron build:win
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: softprops/action-gh-release@v2
        with:
          files: electron/dist/cristal-*.*
          tag_name: ${{ github.ref }}
          draft: true
